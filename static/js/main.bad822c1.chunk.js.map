{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","name","number","handleChange","handleSubmit","className","onSubmit","onChange","type","value","pattern","title","required","Filter","filter","ContactList","this","props","contacts","deleteItem","map","contact","id","onClick","Component","App","state","e","setState","target","preventDefault","prevState","some","includes","uuidv4","alert","handleFilter","toLowerCase","elemIndexToDelete","findIndex","console","log","splice","prevProps","snapshot","length","localStorage","setItem","JSON","stringify","parse","getItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bad822c1.chunk.js","sourcesContent":["import React from 'react';\nimport './ContactForm.css';\n\nexport default function ContactForm({\n  name,\n  number,\n  handleChange,\n  handleSubmit,\n}) {\n  return (\n    <form className=\"phonebook-form\" onSubmit={handleSubmit}>\n      <label className=\"phonebook-label\">\n        Name\n        <input\n          className=\"phonebook-input\"\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className=\"phonebook-label\">\n        Number\n        <input\n          className=\"phonebook-input\"\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className=\"submt-form\" type=\"submit\">\n        Submit\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport './Filter.css';\n\nexport default function Filter({ filter, handleChange }) {\n  return (\n    <div>\n      <p className=\"filter-title\">Find contacts by name</p>\n      <input\n        className=\"search\"\n        onChange={handleChange}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n      />\n    </div>\n  );\n}\n","import { React, Component } from 'react';\nimport './ContactList.css';\n\nexport default class ContactList extends Component {\n  render() {\n    const { contacts, deleteItem } = this.props;\n\n    return (\n      <ul>\n        {contacts.map(contact => {\n          return (\n            <li key={contact.id} className=\"list-item\">\n              {`${contact.name}: ${contact.number}`}\n              <button\n                id={contact.id}\n                onClick={deleteItem}\n                className=\"delete-btn\"\n              >\n                delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (!(prevState.contacts.length === this.state.contacts.length)) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const contactsInStorage = JSON.parse(localStorage.getItem('contacts'));\n\n    if (contactsInStorage) {\n      return this.setState({\n        contacts: [...JSON.parse(localStorage.getItem('contacts'))],\n      });\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.setState(prevState => {\n      if (\n        prevState.contacts.some(contact =>\n          contact.name.includes(prevState.name),\n        )\n      ) {\n        alert(`${prevState.name} is already in contacts`);\n        return;\n      }\n\n      return {\n        name: '',\n        number: '',\n        contacts: [\n          ...prevState.contacts,\n          { id: uuidv4(), name: prevState.name, number: prevState.number },\n        ],\n      };\n    });\n  };\n\n  handleFilter = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  deleteItem = e => {\n    const elemIndexToDelete = this.state.contacts.findIndex(\n      contact => e.target.id === contact.id,\n    );\n    return this.setState(prevState => {\n      console.log(elemIndexToDelete);\n      prevState.contacts.splice(elemIndexToDelete, 1);\n\n      return { prevState };\n    });\n  };\n\n  render() {\n    const { name, number, filter } = this.state;\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <ContactForm\n          name={name}\n          number={number}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n        />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} handleChange={this.handleChange} />\n        <ContactList\n          contacts={this.handleFilter()}\n          deleteItem={this.deleteItem}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}